---
title: "NifHunt: Soil metagenome N fixation analysis from BioBead greenhouse study"
author: Renee Davis
format:
  revealjs: 
    theme: simple
    code-overflow: scroll
execute:
  eval: false
  jupyter: false
  engine: knitr
---

## Overview

Nitrogen (N) fixation is a vital microbial process in soils. N-fixing microbes fox atmospheric N2 to a plant-usable form (NH3) via nitrogenase enzyme complex formed from genes *nif*H, *nif*D, *nif*K.

I analyzed the metagenomes from 2 (of 48) soil samples that were used a greenhouse study prior to BioBead treatment.

-   F1B - bulk field soil
-   F2R - rhizosphere (root space) soil

The goal is to identify the microbial communities, analyze taxa, screen for nitrogenase genes, and establish a pipeline for analyzing the rest of the samples for functional insights.

## BioBead project

![](images/LSINW%202025%20BioBead.png)

## Challenges in soil biodiversity and inoculation

-   Recent meta analyses indicate poor overall biofertilizer performance,

    -   Questions about plant pathogenicity and invasive potential if scaled.

-   How do soil inoculations interact with microbes in soils in which they're applied?

-   Can we scale soil ecotechnologies like BioBead? Where is the sweet spot between ecology and engineering?

-   Welcome to my PhD ðŸ˜€

## Methods

-   Confirm data integrity with checksums
-   Quality control: Fast QC and MultiQC
-   Preprocessing: trimming via Trimmomatic, merging with PEAR
-   Assembly via Megahit
-   Phylogenetic tree construction via Megan
-   Taxonomic identification via taxize
-   Prodigal for gene prediction (protein coding genes)
-   HMMER for nif gene screening

## Trimming

Trimming removes adapters and low-quality bases.

``` bash
java -jar /home/shared/16TB_HDD_01/fish546/renee/Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 4
  F1B-KM40_R1_001.fastq.gz F1B-KM40_R2_001.fastq.gz \
  F1B-KM40_trimmed_R1_paired.fastq.gz F1B-KM40_trimmed_R1_unpaired.fastq.gz \
  F1B-KM40_trimmed_R2_paired.fastq.gz F1B-KM40_trimmed_R2_unpaired.fastq.gz \
  ILLUMINACLIP:TruSeq3-PE.fa:2:30:10 \
  LEADING:3 TRAILING:3 SLIDINGWINDOW:4:20 MINLEN:50  #keeps bps equal or above 50 
```

This produces **unpaired** and **paired** file outputs. Paired reads are those which both forward and reverse survived trimming. These are used for downstream analysis like merging and assembly.

## Merging

These are R1/R2 (forward and reverse reads) and will have to be merged. This is the last component of pre-processing as we work towards metagenome assembly.

``` bash
/home/shared/fastp-v0.24.0/fastp \
  -i F1B-KM40_trimmed_R1_paired.fastq.gz \
  -I F1B-KM40_trimmed_R2_paired.fastq.gz \
  --merge \
  --merged_out F1B-KM40_merged.fastq.gz \ 
  
/home/shared/fastp-v0.24.0/fastp \
  -i F2R-KM41_trimmed_R1_paired.fastq.gz \
  -I F2R-KM41_trimmed_R2_paired.fastq.gz \
  --merge \
  --merged_out F2R-KM41_merged.fastq.gz 
```

## Assembly

To assemble the metagenome files, MEGAHIT was used.

``` {.bash code-line-numbers="2-4"}
./megahit 
  -r ../F1B-KM40_merged.fastq.gz  #specifying input file
  -o megahit_F1B_KM40_out   #output directory
  --min-contig-len 500  #over 500 bps
  -t 8  #8 threads
```

Like other steps, this is done with both files.

``` {.bash code-line-numbers="2-4"}
./megahit \
  -r ../F2R-KM41_merged.fastq.gz \
  -o megahit_F2R_KM41_out \
  --min-contig-len 500 \
  -t 8
```

## Phylogenetic tree construction via MEGAN

MEGAN is a program that graphs the taxonomical content from metagenomic data sets.

First we query Diamond BLAST.

``` bash
    /home/shared/diamond-2.1.8 blastx \
    --db /home/shared/16TB_HDD_01/sam/databases/blastdbs/ncbi-nr-20250429.dmnd \
    --query /home/shared/16TB_HDD_01/fish546/renee/F2R-KM41_merged.fastq.gz \
    --out output/sr-blastx.daa \
    --outfmt 100 \
    --top 5 \
    --block-size 15.0 \
    --index-chunks 4 \
    --threads 32
```

## Phylogenetic tree construction via MEGAN

Then we take the .daa files and put it through the meganizer. This is where we get the map.

``` bash
    /home/shared/megan-6.24.20/tools/daa-meganizer \
    --in output/sr-blastx.daa \
    --threads 32 \
    --mapDB /home/shared/16TB_HDD_01/sr320/github/renee-myco/project/data/megan-map-Feb2022.db
```

## Phylogenetic tree construction via MEGAN

The final step is to convert the .daa files to .rma ones to use in the MEGAN GUI.

``` bash
/home/shared/megan-6.24.20/tools/daa2rma \
--in output/sr-blastx.daa \
--mapDB /home/shared/16TB_HDD_01/sr320/github/renee-myco/project/data/megan-map-Feb2022.db \
--out output/sr-blastx-meganized.rma6 \
--threads 40 2>&1 | tee --append output/daa2rma_log.txt
```

[Rhizosphere soil phylogenetic tree](https://github.com/course-fish546-2025/renee-myco/blob/main/project/F2R-phylo.pdf)

## Rhizosphere soil top hits

| Organism                      | Classification |
|-------------------------------|----------------|
| Acidobacteria bacterium       | Bacteria       |
| Alphaproteobacteria bacterium | Bacteria       |
| Betaproteobacteria bacterium  | Bacteria       |
| Verrucomicrobia bacterium     | Bacteria       |
| Actinobacteria bacterium      | Bacteria       |

: Table 1: Rhizosphere soil top hits (out of 1002 total taxa)

## Bulk soil top hits

| Organism                      | Classification |
|-------------------------------|----------------|
| Acidobacteria bacterium       | Bacteria       |
| Alphaproteobacteria bacterium | Bacteria       |
| Betaproteobacteria bacterium  | Bacteria       |
| Deltaproteobacteria bacterium | Bacteria       |
| Verrucomicrobia bacterium     | Bacteria       |

: Table 2: Bulk soil top hits (out of 933 total taxa)

## Shared vs unique taxa

Step 1: generate a manageable species list in a .txt file.

``` bash
/home/shared/megan-6.24.20/tools/rma2info \
    -i output/sr-blastx-f2r.meganized.rma6 \
    -s Taxonomy \
    -o output/f2r_species.txt
```

This gives the **numeric taxon IDs**, not species names. We can see species ID in the Megan GUI, but it's not being extracted with rma2info. We can use R to read the files, map NCBI Taxonomy IDs to names, and summarize counts by species or genus.

## Cleanup and taxonomy in R

``` r
library(taxize)
library(dplyr)
library(readr)
library(tidyr)

Sys.setenv(ENTREZ_KEY = "d228d1d99f7f95247415e561fdb7a2bdd408") #tells taxize your NCBI ke

map_taxa <- function(file_path, label) {
  df <- read_tsv(file_path, col_names = c("read_id", "tax_id")) %>%
    mutate(
      source = label,
      tax_id = as.character(tax_id) 
    )
  
  unique_ids <- unique(df$tax_id)
  
  # Query NCBI with taxize
  tax_lookup <- taxize::classification(unique_ids, db = "ncbi", messages = FALSE)
  
  # create data frame
  tax_df <- bind_rows(lapply(tax_lookup, function(x) {
    if (inherits(x, "data.frame")) {
      x %>% 
        filter(rank %in% c("genus", "species")) %>%
        select(rank, name) %>%
        pivot_wider(names_from = rank, values_from = name)
    } else {
      tibble(genus = NA_character_, species = NA_character_)
    }
  }), .id = "tax_id")
  
  # Coerce tax_id to character again to match df
  tax_df <- tax_df %>% mutate(tax_id = as.character(tax_id))
  
  # Join and return selected columns
  df %>%
    left_join(tax_df, by = "tax_id") %>%
    select(source, tax_id, genus, species)
}

# load in files
f1b <- map_taxa("output/f1b_species.txt", "f1b")
f2r <- map_taxa("output/f2r_species.txt", "f2r")

# Combine/summarize
combined <- bind_rows(f1b, f2r) %>%
  group_by(source, genus, species) %>%
  summarise(n_reads = n(), .groups = "drop") %>%
  arrange(desc(n_reads))

# pivot for easier comparison
pivoted <- combined %>%
  unite("taxon", genus, species, sep = " ", na.rm = TRUE) %>%
  pivot_wider(names_from = source, values_from = n_reads, values_fill = 0)

print(pivoted)

# save results to .csv for sharing
write_csv(pivoted, "output/taxon_comparison.csv")
```

## Venn diagram of shared and unique taxa

```{r,eval=TRUE}
# Load required packages
library(tidyverse)
library(VennDiagram)

# load data
data <- read_csv("output/metagenome_comparison.csv")

# Prepare presence/absence
data_presence <- data %>%
  mutate(
    F1B_present = F1B > 0,
    F2R_present = F2R > 0
  )

# Venn diagram counts
only_F1B <- sum(data_presence$F1B_present & !data_presence$F2R_present)
only_F2R <- sum(!data_presence$F1B_present & data_presence$F2R_present)
both <- sum(data_presence$F1B_present & data_presence$F2R_present)

# Draw Venn diagram
venn.plot <- draw.pairwise.venn(
  area1 = only_F1B + both,
  area2 = only_F2R + both,
  cross.area = both,
  category = c("F1B", "F2R"),
  fill = c("skyblue", "orange"),
  alpha = 0.5,
  cat.pos = c(-20, 20),
  scaled = FALSE
)
```

## Scatterplot of shared and unique taxa

```{r,eval=TRUE}
# abundance scatterplot data rep
scatter_data <- data_presence %>%
  mutate(
    shared_status = case_when(
      F1B_present & F2R_present ~ "Shared",
      F1B_present & !F2R_present ~ "F1B only",
      !F1B_present & F2R_present ~ "F2R only"
    )
  )

# Scatter plot comparing abundances
ggplot(scatter_data, aes(x = F1B, y = F2R, color = shared_status)) +
  geom_point(alpha = 0.7) +
  scale_x_log10() +
  scale_y_log10() +
  scale_color_manual(values = c("Shared" = "purple", "F1B only" = "blue", "F2R only" = "red")) +
  labs(
    title = "Comparison of Taxon Abundance Between Metagenomes",
    x = "F1B Read Counts (log10 scale)",
    y = "F2R Read Counts (log10 scale)",
    color = "Taxon Status"
  ) +
  theme_minimal()
```

## *nif* gene analysis

![Rubio LM, Ludden PW. 2008. Biosynthesis of the Iron-Molybdenum Cofactor of Nitrogenase. doi:10.1146/annurev.micro.62.081307.162737.](06-presentation_files/Nitrogen-fixation-nif-gene-cluster-of-Klebsiella-pneumoniae-Genes-encoding-the_W640.jpg){width="1300"}

1.  get HMM profiles of 3 nif genes from NCBI

2.  use Prodigal to generate protein coding genes from final assembled contigs

3.  use HMMER to screen files for HMMs

## Prodigal to parse protein-coding genes

Nitrogenase is protein coding, so we need to filter out protein coding genes from the assembled metagenomes to avoid false negatives and unreliable data.

``` bash
/home/shared/16TB_HDD_01/fish546/renee/Prodigal/prodigal \
  -i /home/shared/16TB_HDD_01/fish546/renee/build/megahit_F2R_KM41_out/final.contigs.fa \
  -a /home/shared/16TB_HDD_01/fish546/renee/build/megahit_F2R_KM41_out/predicted_proteins.faa \
  -d /home/shared/16TB_HDD_01/fish546/renee/build/megahit_F2R_KM41_out/predicted_nucleotides.fna \
  -o /home/shared/16TB_HDD_01/fish546/renee/build/megahit_F2R_KM41_out/prodigal_output.gbk \
  -f gbk \
  -p meta
```

Now we repeat with the second file (F1B, bulk soil). Now we have 2 protein fasta files that we can use for a HMMER search.

## HMMER for nif gene screening

Before the search starts, the HMM files need to be uploaded to directory and indexed.

``` bash
hmmsearch --tblout output/nif_results/F2R/nifH.tbl \
  --cpu 4 \
  /home/shared/16TB_HDD_01/fish546/renee/hmm_profiles/nifH.hmm \
  /home/shared/16TB_HDD_01/fish546/renee/build/megahit_F2R_KM41_out/predicted_proteins.faa

hmmsearch --tblout output//nif_results/F2R/nifD.tbl \
  --cpu 4 \
  /home/shared/16TB_HDD_01/fish546/renee/hmm_profiles/nifD.hmm \
  /home/shared/16TB_HDD_01/fish546/renee/build/megahit_F2R_KM41_out/predicted_proteins.faa

hmmsearch --tblout output//nif_results/F2R/nifK.tbl \
  --cpu 4 \
  /home/shared/16TB_HDD_01/fish546/renee/hmm_profiles/nifK.hmm \
  /home/shared/16TB_HDD_01/fish546/renee/build/megahit_F2R_KM41_out/predicted_proteins.faa
```

## *nif* genes in metagenome samples

```{r,eval=TRUE}
# Load libraries
library(tidyverse)
library(ggplot2)

# paths to .tbl files
tbl_files <- list(
  F1B_nifH = "output/nif_results/F1B/nifH.tbl",
  F1B_nifD = "output/nif_results/F1B/nifD.tbl",
  F1B_nifK = "output/nif_results/F1B/nifK.tbl",
  F2R_nifH = "output/nif_results/F2R/nifH.tbl",
  F2R_nifD = "output/nif_results/F2R/nifD.tbl",
  F2R_nifK = "output/nif_results/F2R/nifK.tbl"
)

# parse tblout and count hits
parse_tbl <- function(file, sample, gene) {
  lines <- readLines(file)
  data_lines <- lines[!grepl("^#", lines)]  # Remove comment lines
  n_hits <- length(data_lines)  # Count non-comment lines
  tibble(sample = sample, gene = gene, hits = n_hits)
}

# making a data frame
results <- bind_rows(
  parse_tbl(tbl_files$F1B_nifH, "F1B", "nifH"),
  parse_tbl(tbl_files$F1B_nifD, "F1B", "nifD"),
  parse_tbl(tbl_files$F1B_nifK, "F1B", "nifK"),
  parse_tbl(tbl_files$F2R_nifH, "F2R", "nifH"),
  parse_tbl(tbl_files$F2R_nifD, "F2R", "nifD"),
  parse_tbl(tbl_files$F2R_nifK, "F2R", "nifK")
)

# simple barplot of gene hits per sample
ggplot(results, aes(x = gene, y = hits, fill = sample)) +
  geom_col(position = position_dodge()) +
  labs(title = "Nitrogenase Gene Hits per Metagenome",
       x = "Gene",
       y = "Number of Hits") +
  theme_minimal()
```

## Conclusions

-   *nif*H detected but no *nif*D or *nif*K

    -   could be present but not assembled, operons

    -   *nif*H is a marker gene and more abundant; also subject to HGT, operons or dormant

    -   could screen for **alternative nitrogenase genes**: `vnfDHK`, `anfDHK`

    -   **HMM profiles** may miss divergent versions of *nif*D/K if they're evolutionarily distant from canonical forms

-   slightly more *nif* genes in the rhizosphere than bulk soil

-   detected taxa/top hits are known diazotrophs

## Next steps: scaling up

-   Trim on Trimmomatic

-   Merge with fastp

-   Assemble with Megahit

-   Phylogeny with MEGAN

-   Functional analysis with Prodigal and HMMER

-   Get into PCAs/other analyses TBD

Q: Raven access? Or do this all on Hyak?
